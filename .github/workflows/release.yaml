name: Release

#
# Releases a new version of this project.
#
# Make sure to prepare the project for a new release (see docs for more).
#

on:
  push:
    tags:
      - v*.*.*

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    environment:
      name: PyPI
      url: https://pypi.org/project/${{ github.event.repository.name }}
    permissions:
      contents: write
      id-token: write
    steps:
      - name: Check out repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Determine release-version
        id: determine-release-version
        run: |
          release_version=$(echo "${GITHUB_REF#refs/*/}" | cut -c 2-)
          echo "release-version=$release_version" | tee -a $GITHUB_OUTPUT

      - name: Determine release-name
        id: determine-release-name
        run: |
          release_name="${{ steps.determine-release-version.outputs.release-version }} / $(date +%Y-%m-%d)"
          echo "release-name=$release_name" | tee -a $GITHUB_OUTPUT

      - name: Set up just
        uses: extractions/setup-just@e33e0265a09d6d736e2ee1e0eb685ef1de4669ff # v3.0.0

      - name: Set up Python
        uses: actions/setup-python@8d9ed9ac5c53483de85588cdf95a591a75ab9f55 # v5.5.0
        with:
          python-version-file: pyproject.toml

      - name: Set up Astral uv
        uses: astral-sh/setup-uv@6b9c6063abd6010835644d4c2e1bef4cf5cd0fca # v6.0.1
        with:
          enable-cache: true
          cache-suffix: release
          cache-dependency-glob: |
            uv.lock

      - name: Determine mdformat version
        id: determine-mdformat-version
        run: |
          mdformat_version=$(
            grep \
              --extended-regexp \
              --only-matching \
              --regexp='"pipx:mdformat" = ".+"' \
              mise.toml \
              | cut -c20- | rev | cut -c2- | rev
          )
          echo "mdformat-version=$mdformat_version" | tee -a $GITHUB_OUTPUT

      - name: Install mdformat
        run: uv tool install mdformat@${{ steps.determine-mdformat-version.outputs.mdformat-version }}

      - name: Create release notes
        run: just create-release-notes

      - name: Remove prefix from script
        run: sed --in-place 's/^_//g' pyproject.toml

      - name: Build distributions
        run: uv build --out-dir=.tmp/dist

      - name: Publish distributions
        uses: pypa/gh-action-pypi-publish@76f52bc884231f62b9a034ebfe128415bbaabdfc # v1.12.4
        with:
          packages-dir: .tmp/dist

      - name: Create GitHub release
        uses: softprops/action-gh-release@da05d552573ad5aba039eaac05058a918a7bf631 # v2.2.2
        with:
          name: ${{ steps.determine-release-name.outputs.release-name }}
          body_path: .tmp/release-notes.md
          draft: true
