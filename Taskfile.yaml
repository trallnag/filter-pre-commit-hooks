version: "3"

set:
  - errexit
  - nounset
  - pipefail

dotenv:
  - .env

tasks:
  default:
    desc: Init, format, and lint.
    cmds:
      - task: init
      - task: format
      - task: lint
      - task: test

  init:
    desc: Initialize environment.
    cmds:
      - task: init-precommit
      - task: init-uv

  init-precommit:
    desc: Initialize pre-commit.
    cmds:
      - pre-commit install --install-hooks
      - pre-commit install --install-hooks --hook-type commit-msg
      - pre-commit install --install-hooks --hook-type post-checkout
      - pre-commit install --install-hooks --hook-type post-merge

  init-uv:
    desc: Initialize uv.
    cmds:
      - uv sync --all-extras --dev

  update:
    desc: Update dependencies.
    cmds:
      - task: update-precommit
      - task: update-uv

  update-precommit:
    desc: Update pre-commit dependencies.
    cmds:
      - pre-commit autoupdate

  update-uv:
    desc: Update uv dependencies.
    cmds:
      - uv sync --upgrade --all-extras --dev

  format:
    desc: Run formatters.
    cmds:
      - task: format-precommit
      - task: format-ruff

  format-precommit:
    desc: Run pre-commit hooks that format.
    cmds:
      - >-
        SKIP="$(uv run scripts/filter_pre_commit_hooks.py --mode=tag format)"
        && export SKIP
        && (pre-commit run --all-files || pre-commit run --all-files)
        | grep --perl-regexp --invert-match --regexp='\.\e.+Skipped'

  format-ruff:
    desc: Run Ruff formatter and checker (fix).
    cmds:
      - uv run ruff format
      - uv run ruff check --fix-only

  lint:
    desc: Run linters.
    cmds:
      - task: lint-precommit
      - task: lint-ruff
      - task: lint-mypy

  lint-precommit:
    desc: Run pre-commit hooks that lint.
    cmds:
      - >-
        SKIP="$(uv run scripts/filter_pre_commit_hooks.py --mode=tag lint)"
        && export SKIP
        && pre-commit run --all-files
        | grep --perl-regexp --invert-match --regexp='\.\e.+Skipped'

  lint-ruff:
    desc: Run Ruff checker (nofix).
    cmds:
      - uv run ruff check --no-fix

  lint-mypy:
    desc: Run mypy.
    cmds:
      - uv run dmypy run --timeout 3600 src tests

  test:
    desc: Run tests.
    cmds:
      - uv run pytest

  create-notes:
    desc: Create notes for latest release.
    cmds:
      - mkdir -p tmp
      - >-
        awk '/^## /{count++} count==2{print} count==3{exit}' CHANGELOG.md
        | tail +2 | awk 'NF {p=1} p' | tac | awk 'NF {p=1} p' | tac
        | sed 's/^### /## /' > tmp/release.md
      - uvx mdformat --wrap=10000 tmp/release.md
