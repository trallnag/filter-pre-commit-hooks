version: "3"

set:
  - errexit
  - nounset
  - pipefail

dotenv:
  - .env

tasks:
  default:
    desc: Init, format, lint, and test.
    cmds:
      - task: init
      - task: format
      - task: lint
      - task: test

  init:
    desc: Initialize environment.
    cmds:
      - task: init:pre-commit
      - task: init:uv

  init:pre-commit:
    desc: Initialize pre-commit.
    cmds:
      - pre-commit install --install-hooks
      - pre-commit install --install-hooks --hook-type commit-msg
      - pre-commit install --install-hooks --hook-type post-checkout
      - pre-commit install --install-hooks --hook-type post-merge

  init-uv:
    desc: Initialize uv.
    cmds:
      - uv sync --all-extras --dev

  update:
    desc: Update dependencies.
    cmds:
      - task: update:pre-commit
      - task: update:uv

  update:pre-commit:
    desc: Update pre-commit dependencies.
    cmds:
      - pre-commit autoupdate

  update:uv:
    desc: Update uv dependencies.
    cmds:
      - uv sync --upgrade --all-extras --dev

  format:
    desc: Run formatters.
    cmds:
      - task: format:pre-commit
      - task: format:shfmt
      - task: format:ruff

  format:pre-commit:
    desc: Run pre-commit hooks that format.
    cmds:
      - ./scripts/format-with-pre-commit.bash

  format:shfmt:
    desc: Run shfmt.
    cmds:
      - shfmt --list --write scripts

  format:ruff:
    desc: Run Ruff formatter and checker (fix).
    cmds:
      - uv run ruff format
      - uv run ruff check --fix-only

  lint:
    desc: Run linters.
    cmds:
      - task: lint-precommit
      - task: lint:shellcheck
      - task: lint:ruff
      - task: lint:mypy

  lint:precommit:
    desc: Run pre-commit hooks that lint.
    cmds:
      - ./scripts/lint-with-pre-commit.bash

  lint:shellcheck:
    desc: Run ShellCheck.
    cmds:
      - find scripts -name '*.bash' -o -name '*.sh' | xargs shellcheck

  lint:ruff:
    desc: Run Ruff checker (nofix).
    cmds:
      - uv run ruff check --no-fix

  lint:mypy:
    desc: Run mypy.
    cmds:
      - uv run dmypy run --timeout 3600 src tests

  test:
    desc: Run tests.
    cmds:
      - uv run pytest

  create-notes:
    desc: Create notes for latest release.
    cmds:
      - ./scripts/create-release-notes.bash
